from utils import *


st.set_page_config(
	layout='wide'
)

columns_menu = st.columns([1, 2])

with columns_menu[0]:
	st.page_link('chat.py', label='–ß–∞—Ç üì®')
	st.page_link(r'pages/upload_files.py', label='–î–æ–∫—É–º–µ–Ω—Ç—ã/–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π üìÑ')
	st.page_link(r'pages/close_chat.py', label='–ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç üîí')


with columns_menu[1]:
	st.markdown("# :rainbow[Test Chat]")

	if 'access_token' not in st.session_state:
		try:
			st.session_state.access_token = get_gigachat_token()
			st.toast('GIGACHAT token –ø–æ–ª—É—á–µ–Ω', icon='üòä')
	
		except Exception as error:
			st.toast(f'–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º GIGACHAT token\n\n–û—à–∏–±–∫–∞: {error}', icon='‚ùå')


	if 'messages' not in st.session_state:
		st.session_state.messages = [
			{
				'role': 'ai',
				'prompt': '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?'
			}
		]


	for message in st.session_state.messages:
		st.chat_message(
			message['role']
		).write(message['prompt'])
	

	prompt = st.chat_input(
		'–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å...'
	)


	select_search = st.radio('–°–ø–æ—Å–æ–± –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è', ['–ë–ó', '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞', '–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ'], horizontal=True)
	if select_search == '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞':
		files = get_files(st.session_state.access_token)
		select_file = st.multiselect(
			'–°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', 
			get_files_name(files), 
			placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞(–æ–≤)'
		)


	if prompt:
		st.chat_message('user').write(prompt)
		st.session_state.messages.append(
			{
				'role': 'user',
				'prompt': prompt
			}
		)


		match select_search:
			case '–ë–ó':
				files = get_files(st.session_state.access_token)
				file_prompt = f"""–ó–∞–ø—Ä–æ—Å: {prompt}\n\n–í—ã–±–µ—Ä–∏ –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π —Ñ–∞–π–ª –∫ –∑–∞–¥–∞–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É:\n{'\t'+'\n\t'.join(get_files_name(files))}\n\n–í –æ—Ç–≤–µ—Ç–µ –≤—ã–≤–∏–¥–∏ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
				responce = send_prompt(file_prompt, st.session_state.access_token)
				file_id = name_file_to_id(st.session_state.access_token, responce)
				responce = send_prompt(prompt, st.session_state.access_token, file_id)
				st.chat_message('ai').write(responce)
				st.session_state.messages.append(
					{
						'role': 'ai',
						'prompt': responce
					}
				)

			case '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞':
				file_id = name_file_to_id(st.session_state.access_token, *select_file)
				responce = send_prompt(prompt, st.session_state.access_token, file_id)
				st.chat_message('ai').write(responce)
				st.session_state.messages.append(
					{
						'role': 'ai',
						'prompt': responce
					}
				)
				

			case '–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ':
				responce: str = send_prompt(prompt, st.session_state.access_token)
				st.chat_message('ai').write(responce)
				st.session_state.messages.append(
					{
						'role': 'ai',
						'prompt': responce
					}
				)

		st.rerun()